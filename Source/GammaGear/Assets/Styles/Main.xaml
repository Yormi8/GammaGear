<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <!--<Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="{DynamicResource GreenBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource Lavender}"/>
        </Style.Resources>
    </Style>


    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource MantleBrush}"/>
    </Style>
    <Style TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource RedBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LavenderBrush}"/>
        <Setter Property="BorderThickness" Value="1 1 1 1"/>
    </Style>
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource CrustBrush}"/>
    </Style>
    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource CrustBrush}"/>
    </Style>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource CrustBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LavenderBrush}"/>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LavenderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource LavenderBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource Surface0Brush}"/>
                <Setter Property="Foreground" Value="{DynamicResource RedBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource Surface0}"/>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource CrustBrush}"/>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
    </Style>
    <!--<Style x:Key="TabItemFocusedStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource PinkBrush}"/>
    </Style>-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource this}"/>-->
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="#00000000"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#00000000"/>
    </Style>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource MantleBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PinkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource MantleBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PinkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ColumnDefinition}"/>
    <Style TargetType="{x:Type Image}"/>
    <Style TargetType="{x:Type Rectangle}"/>

    <!--xctk stuff-->
    <DataTemplate x:Key="IncreaseGlyphNormalKey">
        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="6">&#xE70E;</TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="IncreaseGlyphDisabledKey">
        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="6">&#xE70E;</TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="DecreaseGlyphNormalKey">
        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="6">&#xE70D;</TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="DecreaseGlyphDisabledKey">
        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="6">&#xE70D;</TextBlock>
    </DataTemplate>
    <Style x:Key="NumericUpDown"
         TargetType="{x:Type xctk:InputBase}">
        <Setter Property="Background"
            Value="#00000000" />
        <Setter Property="BorderBrush"
            Value="{DynamicResource LavenderBrush}" />
        <Setter Property="BorderThickness"
            Value="1" />
        <Setter Property="Foreground"
            Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment"
            Value="Right" />
        <Setter Property="IsTabStop"
            Value="False" />
        <Setter Property="VerticalContentAlignment"
            Value="Center" />
        <Setter Property="TextAlignment"
            Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <xctk:ButtonSpinner x:Name="PART_Spinner"
                               IsTabStop="False"
                               Background="{TemplateBinding Background}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                               ShowSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                               SpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                               SpinnerWidth="{Binding ButtonSpinnerWidth, RelativeSource={RelativeSource TemplatedParent}}"
                               SpinnerHeight="{Binding ButtonSpinnerHeight, RelativeSource={RelativeSource TemplatedParent}}"
                               SpinnerUpContentTemplate="{Binding ButtonSpinnerUpContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource IncreaseGlyphNormalKey}}"
                               SpinnerDownContentTemplate="{Binding ButtonSpinnerDownContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DecreaseGlyphNormalKey}}"
                               SpinnerUpDisabledContentTemplate="{Binding ButtonSpinnerUpDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource IncreaseGlyphDisabledKey}}"
                               SpinnerDownDisabledContentTemplate="{Binding ButtonSpinnerDownDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DecreaseGlyphDisabledKey}}">
                        <xctk:WatermarkTextBox x:Name="PART_TextBox"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    ContextMenu="{TemplateBinding ContextMenu}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="True"
                                    MinWidth="20"
                                    AcceptsReturn="False"
                                    Padding="{TemplateBinding Padding}"
                                    AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap"
                                    TabIndex="{TemplateBinding TabIndex}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}">
                        </xctk:WatermarkTextBox>
                    </xctk:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                           Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly"
                      Value="True"
                      TargetName="PART_TextBox" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                         Value="True">
                            <Setter Property="IsReadOnly"
                      Value="True"
                      TargetName="PART_TextBox" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                     Value="False">
                            <Setter Property="Foreground"
                      Value="{DynamicResource TextBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                     Value="True">
                            <Setter TargetName="PART_TextBox"
                      Property="FocusManager.FocusedElement"
                      Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xctk:IntegerUpDown}" BasedOn="{StaticResource NumericUpDown}">

    </Style>
</ResourceDictionary>